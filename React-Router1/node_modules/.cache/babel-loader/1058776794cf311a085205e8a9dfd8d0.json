{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/React-Router1/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  console.log('history', history);\n  const location = useLocation();\n  const queryParam = new URLSearchParams(location.search);\n  const isSortAscending = queryParam.get('sorting') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortAscending);\n\n  const changeSortingHandler = () => {\n    history.push(`/quotes?sorting=${isSortAscending ? 'desc' : 'asc'}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\" Sort \", isSortAscending ? 'Descending' : 'Ascending', \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/React-Router1/src/components/quotes/QuoteList.js"],"names":["useHistory","useLocation","Fragment","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","console","log","location","queryParam","URLSearchParams","search","isSortAscending","get","sortedQuotes","changeSortingHandler","push","sorting","list","map","quote","author","text"],"mappings":";;;AAAA,SAAQA,UAAR,EAAmBC,WAAnB,QAAqC,kBAArC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACtC,SAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;AACnC,QAAIH,SAAJ,EAAe;AACX,aAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACH,KAFD,MAEO;AACH,aAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACH;AACJ,GANM,CAAP;AAOH,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGd,UAAU,EAA1B;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,OAAtB;AACA,QAAMG,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,UAAU,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAnB;AACA,QAAMC,eAAe,GAAGH,UAAU,CAACI,GAAX,CAAe,SAAf,MAA4B,KAApD;AACA,QAAMC,YAAY,GAAGlB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAce,eAAd,CAA/B;;AACA,QAAMG,oBAAoB,GAAG,MAAM;AAC/BV,IAAAA,OAAO,CAACW,IAAR,CAAc,mBAAkBJ,eAAe,GAAG,MAAH,GAAY,KAAM,EAAjE;AACH,GAFD;;AAGF,sBACE,QAAC,QAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACsB,OAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEF,oBAAjB;AAAA,6BAA8CH,eAAe,GAAG,YAAH,GAAkB,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAIE;AAAI,MAAA,SAAS,EAAEjB,OAAO,CAACuB,IAAvB;AAAA,gBACGJ,YAAY,CAACK,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAAClB,EAFZ;AAGE,QAAA,MAAM,EAAEkB,KAAK,CAACC,MAHhB;AAIE,QAAA,IAAI,EAAED,KAAK,CAACE;AAJd,SACOF,KAAK,CAAClB,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;GAAMC,S;UACcZ,U,EAECC,W;;;KAHfW,S;AA6BN,eAAeA,SAAf","sourcesContent":["import {useHistory,useLocation} from 'react-router-dom'\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1;\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1;\n        }\n    });\n};\n\nconst QuoteList = (props) => {\n    const history = useHistory()\n    console.log('history',history)\n    const location = useLocation()\n    const queryParam = new URLSearchParams(location.search)\n    const isSortAscending = queryParam.get('sorting')==='asc'\n    const sortedQuotes = sortQuotes(props.quotes,isSortAscending)\n    const changeSortingHandler = () => {\n        history.push(`/quotes?sorting=${isSortAscending ? 'desc' : 'asc'}`)\n    }\n  return (\n    <Fragment>\n        <div className={classes.sorting}>\n            <button onClick={changeSortingHandler}> Sort {isSortAscending ? 'Descending' : 'Ascending'}  </button>\n        </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}