{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/React-Router1/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  console.log('location', location);\n  const queryParam = new URLSearchParams(location.search);\n  console.log('queryParam', queryParam);\n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sorting=asc');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: \" Sort Ascending  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/React-Router1/src/components/quotes/QuoteList.js"],"names":["useHistory","useLocation","Fragment","QuoteItem","classes","QuoteList","props","history","location","console","log","queryParam","URLSearchParams","search","changeSortingHandler","push","sorting","list","quotes","map","quote","id","author","text"],"mappings":";;;AAAA,SAAQA,UAAR,EAAmBC,WAAnB,QAAqC,kBAArC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,QAAvB;AACA,QAAMG,UAAU,GAAG,IAAIC,eAAJ,CAAoBJ,QAAQ,CAACK,MAA7B,CAAnB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,UAAzB;;AAEA,QAAMG,oBAAoB,GAAG,MAAM;AAC/BP,IAAAA,OAAO,CAACQ,IAAR,CAAa,qBAAb;AACH,GAFD;;AAGF,sBACE,QAAC,QAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACY,OAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEF,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAIE;AAAI,MAAA,SAAS,EAAEV,OAAO,CAACa,IAAvB;AAAA,gBACGX,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,QAAA,MAAM,EAAED,KAAK,CAACE,MAHhB;AAIE,QAAA,IAAI,EAAEF,KAAK,CAACG;AAJd,SACOH,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;GAAMhB,S;UACcL,U,EACCC,W;;;KAFfI,S;AA6BN,eAAeA,SAAf","sourcesContent":["import {useHistory,useLocation} from 'react-router-dom'\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n    const history = useHistory()\n    const location = useLocation()\n    console.log('location',location)\n    const queryParam = new URLSearchParams(location.search)\n    console.log('queryParam',queryParam)\n\n    const changeSortingHandler = () => {\n        history.push('/quotes?sorting=asc')\n    }\n  return (\n    <Fragment>\n        <div className={classes.sorting}>\n            <button onClick={changeSortingHandler}> Sort Ascending  </button>\n        </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}