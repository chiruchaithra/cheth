{"ast":null,"code":"// const redux =  require('redux') // through js\nimport { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst InitialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  InitialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'decrement') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === 'increase') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter + action.value\n    };\n  }\n\n  if (action.type === 'toggle') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return InitialState;\n}; // const store = createStore(counterReducer)\n\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Redux/src/store/index.js"],"names":["createStore","createSlice","configureStore","InitialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","value","toggle","counterReducer","type","stateCopy","store","reducer","counterActions","actions"],"mappings":"AAAA;AACA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,CADS;AAEjBC,EAAAA,WAAW,EAAC;AAFK,CAArB;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAC,SADwB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AAACA,MAAAA,KAAK,CAACN,OAAN;AAAgB,KAJ5B;;AAKNQ,IAAAA,QAAQ,CAACF,KAAD,EAAOG,MAAP,EAAgB;AAACH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAeS,MAAM,CAACC,KAAtC;AAA4C,KAL/D;;AAMNC,IAAAA,MAAM,CAACL,KAAD,EAAW;AAACA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AAAuC;;AANnD;AAHmB,CAAD,CAAhC;;AAeA,MAAMW,cAAc,GAAG,YAA+B;AAAA,MAA9BN,KAA8B,uEAAxBP,YAAwB;AAAA,MAAXU,MAAW;;AAClD,MAAGA,MAAM,CAACI,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,UAAMC,SAAS,GAAGR,KAAlB;AACA,WAAO,EACH,GAAGQ,SADA;AAEHd,MAAAA,OAAO,EAAGM,KAAK,CAACN,OAAN,GAAc;AAFrB,KAAP;AAIH;;AAED,MAAGS,MAAM,CAACI,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,UAAMC,SAAS,GAAGR,KAAlB;AACA,WAAO,EACH,GAAGQ,SADA;AAEHd,MAAAA,OAAO,EAAGM,KAAK,CAACN,OAAN,GAAc;AAFrB,KAAP;AAIH;;AAED,MAAGS,MAAM,CAACI,IAAP,KAAgB,UAAnB,EAA+B;AAC3B,UAAMC,SAAS,GAAGR,KAAlB;AACA,WAAO,EACH,GAAGQ,SADA;AAEHd,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC;AAF7B,KAAP;AAIH;;AAED,MAAGD,MAAM,CAACI,IAAP,KAAgB,QAAnB,EAA6B;AACzB,UAAMC,SAAS,GAAGR,KAAlB;AACA,WAAO,EACH,GAAGQ,SADA;AAEHb,MAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AAFjB,KAAP;AAIH;;AACD,SAAOF,YAAP;AACH,CAjCD,C,CAmCA;;;AAEA,MAAMgB,KAAK,GAAGjB,cAAc,CAAC;AACzBkB,EAAAA,OAAO,EAACd,YAAY,CAACc;AADI,CAAD,CAA5B;AAKA,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAApC;AACP,eAAeH,KAAf","sourcesContent":["// const redux =  require('redux') // through js\nimport {createStore} from 'redux'\nimport {createSlice,configureStore} from '@reduxjs/toolkit'\n\nconst InitialState = {\n    counter:0,\n    showCounter:true,\n}\n\nconst counterSlice = createSlice({\n    name:'counter',\n    InitialState,\n    reducers: {\n        increment(state) {\n            state.counter++\n        },\n        decrement(state) {state.counter--},\n        increase(state,action)  {state.counter = state.counter +action.value},\n        toggle(state)    {state.showCounter = !state.showCounter}\n\n\n}\n})\n\nconst counterReducer = (state=InitialState,action) => {\n    if(action.type === 'increment') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter : state.counter+1\n        }\n    }\n\n    if(action.type === 'decrement') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter : state.counter-1\n        }\n    }\n\n    if(action.type === 'increase') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter: state.counter + action.value\n        }\n    }\n\n    if(action.type === 'toggle') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            showCounter: !state.showCounter\n        }\n    }\n    return InitialState\n}\n\n// const store = createStore(counterReducer)\n\nconst store = configureStore({\n    reducer:counterSlice.reducer\n})\n\n\nexport const counterActions = counterSlice.actions\nexport default store\n"]},"metadata":{},"sourceType":"module"}