{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/Redux/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from \"react\";\nimport classes from './Counter.module.css';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { counterActions } from '../store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => ({\n    counter: state.counter.counter,\n    showCounter: state.counter.showCounter\n  })); // const showCounter = useSelector(state => state.globalState.showCounter)\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase({\n      amount: 5\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), counter.showCounter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter.counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(counterActions.increment()),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseHandler,\n      children: \"Increment by 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrementHandler,\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"gthwM6sqboLtlTmr2wLRFX51eJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Counter;\nexport default Counter; //CLASS BASED COMPONENT REDUX\n// class Counter extends Component {\n//     incrementHandler = () => {\n//         this.props.increment()\n//\n// }\n//\n//     decrementHandler = () => {\n//         this.props.decrement()\n//     }\n//     toggleCounterHandler() {\n//\n//     }\n//     render() {\n//         return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{this.props.counter}\n//       </div>\n//         <button onClick={this.incrementHandler}>Increment</button>\n//         <button onClick={this.decrementHandler}>Decrement</button>\n//       <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n//     }\n// }\n//\n// const mapStateToProps = (state) => {\n//     return {\n//         counter:state.counter\n//     }\n// }\n//\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         increment: () => dispatch({type:'increment'}),\n//         decrement: () => dispatch({type:'decrement'})\n//     }\n//\n// }\n// export default connect(mapStateToProps,mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Redux/src/components/Counter.js"],"names":["Component","classes","useSelector","useDispatch","connect","counterActions","Counter","dispatch","counter","state","showCounter","toggleCounterHandler","toggle","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","amount","value"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,WAAR,EAAoBC,WAApB,EAAgCC,OAAhC,QAA8C,aAA9C;AACA,SAAQC,cAAR,QAA6B,gBAA7B;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEF,QAAMK,OAAO,GAAGN,WAAW,CAACO,KAAK,KAAK;AAClCD,IAAAA,OAAO,EAACC,KAAK,CAACD,OAAN,CAAcA,OADY;AAElCE,IAAAA,WAAW,EAAED,KAAK,CAACD,OAAN,CAAcE;AAFO,GAAL,CAAN,CAA3B,CAHoB,CAQtB;;AACI,QAAMC,oBAAoB,GAAG,MAAM;AAC/BJ,IAAAA,QAAQ,CAACF,cAAc,CAACO,MAAf,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,QAAQ,CAACF,cAAc,CAACS,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BR,IAAAA,QAAQ,CAACF,cAAc,CAACW,SAAf,EAAD,CAAR;AACL,GAFC;;AAIF,QAAMC,eAAe,GAAG,MAAM;AAC1BV,IAAAA,QAAQ,CAACF,cAAc,CAACa,QAAf,CAAwB;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAxB,CAAD,CAAR;AACH,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAElB,OAAO,CAACO,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEKA,OAAO,CAACE,WAAR,iBAAuB;AAAK,MAAA,SAAS,EAAET,OAAO,CAACmB,KAAxB;AAAA,gBAAgCZ,OAAO,CAACA;AAAxC;AAAA;AAAA;AAAA;AAAA,YAF5B,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACF,cAAc,CAACS,SAAf,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOE;AAAQ,MAAA,OAAO,EAAEJ,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCD;;GAAML,O;UACeH,W,EAEHD,W;;;KAHZI,O;AAqCN,eAAgBA,OAAhB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {Component} from \"react\";\nimport classes from './Counter.module.css';\nimport {useSelector,useDispatch,connect} from 'react-redux'\nimport {counterActions} from '../store/index'\nconst Counter = () => {\n    const dispatch = useDispatch();\n\n  const counter = useSelector(state => ({\n      counter:state.counter.counter,\n      showCounter: state.counter.showCounter\n}))\n\n// const showCounter = useSelector(state => state.globalState.showCounter)\n    const toggleCounterHandler = () => {\n        dispatch(counterActions.toggle())\n    };\n\n    const incrementHandler = () => {\n      dispatch(counterActions.increment())\n    }\n\n    const decrementHandler = () => {\n        dispatch(counterActions.decrement())\n  }\n\n  const increaseHandler = () => {\n      dispatch(counterActions.increase({amount:5}))\n  }\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n        {counter.showCounter && <div className={classes.value}>{counter.counter}\n        </div> }\n        <button onClick={() => dispatch(counterActions.increment())}>Increment</button>\n        <button onClick={increaseHandler}>Increment by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\nexport default  Counter\n\n//CLASS BASED COMPONENT REDUX\n\n// class Counter extends Component {\n//     incrementHandler = () => {\n//         this.props.increment()\n//\n// }\n//\n//     decrementHandler = () => {\n//         this.props.decrement()\n//     }\n//     toggleCounterHandler() {\n//\n//     }\n//     render() {\n//         return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{this.props.counter}\n//       </div>\n//         <button onClick={this.incrementHandler}>Increment</button>\n//         <button onClick={this.decrementHandler}>Decrement</button>\n//       <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n//     }\n// }\n//\n// const mapStateToProps = (state) => {\n//     return {\n//         counter:state.counter\n//     }\n// }\n//\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         increment: () => dispatch({type:'increment'}),\n//         decrement: () => dispatch({type:'decrement'})\n//     }\n//\n// }\n// export default connect(mapStateToProps,mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}