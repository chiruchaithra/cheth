{"ast":null,"code":"// const redux =  require('redux') // through js\nimport { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst InitialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  InitialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter;\n    },\n\n    toggle() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'decrement') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === 'increase') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter + action.value\n    };\n  }\n\n  if (action.type === 'toggle') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return InitialState;\n};\n\nconst store = createStore(counterReducer); // const countSubscriber = () => {\n//     const latestValue = store.getState()\n//     console.log('latestValue',latestValue)\n// }\n// store.subscribe(countSubscriber)\n// store.dispatch({type:'increment'})\n// store.dispatch({type:'decrement'})\n\nexport default store;","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Redux/src/store/index.js"],"names":["createStore","createSlice","InitialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","toggle","counterReducer","type","stateCopy","value","store"],"mappings":"AAAA;AACA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,CADS;AAEjBC,EAAAA,WAAW,EAAC;AAFK,CAArB;AAKAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAC,SADG;AAERH,EAAAA,YAFQ;AAGRI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KAHK;;AAINM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AAACA,MAAAA,KAAK,CAACL,OAAN;AAAgB,KAJ5B;;AAKNO,IAAAA,QAAQ,CAACF,KAAD,EAAOG,MAAP,EAAgB;AAACH,MAAAA,KAAK,CAACL,OAAN;AAAc,KALjC;;AAMNS,IAAAA,MAAM,GAAM,CAAE;;AANR;AAHF,CAAD,CAAX;;AAeA,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9BL,KAA8B,uEAAxBN,YAAwB;AAAA,MAAXS,MAAW;;AAClD,MAAGA,MAAM,CAACG,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,UAAMC,SAAS,GAAGP,KAAlB;AACA,WAAO,EACH,GAAGO,SADA;AAEHZ,MAAAA,OAAO,EAAGK,KAAK,CAACL,OAAN,GAAc;AAFrB,KAAP;AAIH;;AAED,MAAGQ,MAAM,CAACG,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,UAAMC,SAAS,GAAGP,KAAlB;AACA,WAAO,EACH,GAAGO,SADA;AAEHZ,MAAAA,OAAO,EAAGK,KAAK,CAACL,OAAN,GAAc;AAFrB,KAAP;AAIH;;AAED,MAAGQ,MAAM,CAACG,IAAP,KAAgB,UAAnB,EAA+B;AAC3B,UAAMC,SAAS,GAAGP,KAAlB;AACA,WAAO,EACH,GAAGO,SADA;AAEHZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACK;AAF7B,KAAP;AAIH;;AAED,MAAGL,MAAM,CAACG,IAAP,KAAgB,QAAnB,EAA6B;AACzB,UAAMC,SAAS,GAAGP,KAAlB;AACA,WAAO,EACH,GAAGO,SADA;AAEHX,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ;AAFjB,KAAP;AAIH;;AACD,SAAOF,YAAP;AACH,CAjCD;;AAmCA,MAAMe,KAAK,GAAGjB,WAAW,CAACa,cAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeI,KAAf","sourcesContent":["// const redux =  require('redux') // through js\nimport {createStore} from 'redux'\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst InitialState = {\n    counter:0,\n    showCounter:true,\n}\n\ncreateSlice({\n    name:'counter',\n    InitialState,\n    reducers: {\n        increment(state) {\n            state.counter++\n        },\n        decrement(state) {state.counter--},\n        increase(state,action)  {state.counter},\n        toggle()    {}\n\n\n}\n})\n\nconst counterReducer = (state=InitialState,action) => {\n    if(action.type === 'increment') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter : state.counter+1\n        }\n    }\n\n    if(action.type === 'decrement') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter : state.counter-1\n        }\n    }\n\n    if(action.type === 'increase') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter: state.counter + action.value\n        }\n    }\n\n    if(action.type === 'toggle') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            showCounter: !state.showCounter\n        }\n    }\n    return InitialState\n}\n\nconst store = createStore(counterReducer)\n\n// const countSubscriber = () => {\n//     const latestValue = store.getState()\n//     console.log('latestValue',latestValue)\n// }\n// store.subscribe(countSubscriber)\n// store.dispatch({type:'increment'})\n// store.dispatch({type:'decrement'})\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}