{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst counterInitialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: counterInitialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement: state => {\n      state.counter--;\n    },\n    increase: (state, action) => {\n      state.counter = state.counter + action.payload.amount;\n    },\n    toggle: state => {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Redux/src/store/CounterReducer.js"],"names":["createSlice","counterInitialState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","amount","toggle","counterActions","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,OAAO,EAAC,CADgB;AAExBC,EAAAA,WAAW,EAAC;AAFY,CAA5B;AAOA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAACL,mBAFgB;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAS;AACdA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,EAAGD,KAAD,IAAW;AAACA,MAAAA,KAAK,CAACP,OAAN;AAAgB,KAJjC;AAKNS,IAAAA,QAAQ,EAAE,CAACF,KAAD,EAAOG,MAAP,KAAmB;AAACH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAeU,MAAM,CAACC,OAAP,CAAeC,MAA9C;AAAqD,KAL7E;AAMNC,IAAAA,MAAM,EAAGN,KAAD,IAAa;AAACA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AAAuC;AANvD;AAHmB,CAAD,CAAhC;AAYA,OAAO,MAAMa,cAAc,GAAGZ,YAAY,CAACa,OAApC;AACP,eAAeb,YAAY,CAACc,OAA5B","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst counterInitialState = {\n    counter:0,\n    showCounter:true,\n\n\n}\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialState:counterInitialState,\n    reducers: {\n        increment(state)  {\n            state.counter++\n        },\n        decrement: (state) => {state.counter--},\n        increase: (state,action) =>  {state.counter = state.counter +action.payload.amount},\n        toggle: (state) =>   {state.showCounter = !state.showCounter}\n    }\n})\nexport const counterActions = counterSlice.actions\nexport default counterSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}