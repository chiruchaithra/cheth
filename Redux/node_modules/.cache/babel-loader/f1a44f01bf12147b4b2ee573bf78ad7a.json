{"ast":null,"code":"// const redux =  require('redux') // through js\nimport { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst InitialState = {\n  counter: 0,\n  showCounter: true\n}; // const counterSlice = createSlice({\n//     name:'counter',\n//     InitialState,\n//     reducers: {\n//         increment(state) {\n//             state.counter++\n//         },\n//         decrement(state) {state.counter--},\n//         increase(state,action)  {state.counter = state.counter +action.payload},\n//         toggle(state)    {state.showCounter = !state.showCounter}\n//\n//\n// }\n// })\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'decrement') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === 'increase') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      counter: state.counter + action.value\n    };\n  }\n\n  if (action.type === 'toggle') {\n    const stateCopy = state;\n    return { ...stateCopy,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return InitialState;\n};\n\nconst store = createStore(counterReducer); // const store = configureStore({\n//     reducer:counterSlice.reducer\n// })\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Redux/src/store/index.js"],"names":["createStore","createSlice","configureStore","InitialState","counter","showCounter","counterReducer","state","action","type","stateCopy","value","store","counterActions","counterSlice","actions"],"mappings":"AAAA;AACA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC,CADS;AAEjBC,EAAAA,WAAW,EAAC;AAFK,CAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAxBJ,YAAwB;AAAA,MAAXK,MAAW;;AAClD,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,UAAMC,SAAS,GAAGH,KAAlB;AACA,WAAO,EACH,GAAGG,SADA;AAEHN,MAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAc;AAFrB,KAAP;AAIH;;AAED,MAAGI,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,UAAMC,SAAS,GAAGH,KAAlB;AACA,WAAO,EACH,GAAGG,SADA;AAEHN,MAAAA,OAAO,EAAGG,KAAK,CAACH,OAAN,GAAc;AAFrB,KAAP;AAIH;;AAED,MAAGI,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA+B;AAC3B,UAAMC,SAAS,GAAGH,KAAlB;AACA,WAAO,EACH,GAAGG,SADA;AAEHN,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACG;AAF7B,KAAP;AAIH;;AAED,MAAGH,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B;AACzB,UAAMC,SAAS,GAAGH,KAAlB;AACA,WAAO,EACH,GAAGG,SADA;AAEHL,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFjB,KAAP;AAIH;;AACD,SAAOF,YAAP;AACH,CAjCD;;AAmCA,MAAMS,KAAK,GAAGZ,WAAW,CAACM,cAAD,CAAzB,C,CAEA;AACA;AACA;;AAGA,OAAO,MAAMO,cAAc,GAAGC,YAAY,CAACC,OAApC;AACP,eAAeH,KAAf","sourcesContent":["// const redux =  require('redux') // through js\nimport {createStore} from 'redux'\nimport {createSlice,configureStore} from '@reduxjs/toolkit'\n\nconst InitialState = {\n    counter:0,\n    showCounter:true,\n}\n\n// const counterSlice = createSlice({\n//     name:'counter',\n//     InitialState,\n//     reducers: {\n//         increment(state) {\n//             state.counter++\n//         },\n//         decrement(state) {state.counter--},\n//         increase(state,action)  {state.counter = state.counter +action.payload},\n//         toggle(state)    {state.showCounter = !state.showCounter}\n//\n//\n// }\n// })\n\nconst counterReducer = (state=InitialState,action) => {\n    if(action.type === 'increment') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter : state.counter+1\n        }\n    }\n\n    if(action.type === 'decrement') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter : state.counter-1\n        }\n    }\n\n    if(action.type === 'increase') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            counter: state.counter + action.value\n        }\n    }\n\n    if(action.type === 'toggle') {\n        const stateCopy = state\n        return {\n            ...stateCopy,\n            showCounter: !state.showCounter\n        }\n    }\n    return InitialState\n}\n\nconst store = createStore(counterReducer)\n\n// const store = configureStore({\n//     reducer:counterSlice.reducer\n// })\n\n\nexport const counterActions = counterSlice.actions\nexport default store\n"]},"metadata":{},"sourceType":"module"}