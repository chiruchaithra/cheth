{"ast":null,"code":"// const redux =  require('redux') // through js\nimport { createStore } from 'redux';\nconst InitialState = {\n  counter: 0\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.value\n    };\n  }\n\n  return InitialState;\n};\n\nconst store = createStore(counterReducer); // const countSubscriber = () => {\n//     const latestValue = store.getState()\n//     console.log('latestValue',latestValue)\n// }\n// store.subscribe(countSubscriber)\n// store.dispatch({type:'increment'})\n// store.dispatch({type:'decrement'})\n\nexport default store;","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Redux/src/store/index.js"],"names":["createStore","InitialState","counter","counterReducer","state","action","type","value","store"],"mappings":"AAAA;AACA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAC;AADS,CAArB;;AAIA,MAAMC,cAAc,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAxBH,YAAwB;AAAA,MAAXI,MAAW;;AAClD,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO;AACHJ,MAAAA,OAAO,EAAGE,KAAK,CAACF,OAAN,GAAc;AADrB,KAAP;AAGH;;AAED,MAAGG,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAC5B,WAAO;AACHJ,MAAAA,OAAO,EAAGE,KAAK,CAACF,OAAN,GAAc;AADrB,KAAP;AAGH;;AAED,MAAGG,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA+B;AAC3B,WAAO;AACHJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACE;AAD7B,KAAP;AAGH;;AACD,SAAON,YAAP;AACH,CAnBD;;AAqBA,MAAMO,KAAK,GAAGR,WAAW,CAACG,cAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeK,KAAf","sourcesContent":["// const redux =  require('redux') // through js\nimport {createStore} from 'redux'\n\nconst InitialState = {\n    counter:0\n}\n\nconst counterReducer = (state=InitialState,action) => {\n    if(action.type === 'increment') {\n        return {\n            counter : state.counter+1\n        }\n    }\n\n    if(action.type === 'decrement') {\n        return {\n            counter : state.counter-1\n        }\n    }\n\n    if(action.type === 'increase') {\n        return {\n            counter: state.counter + action.value\n        }\n    }\n    return InitialState\n}\n\nconst store = createStore(counterReducer)\n\n// const countSubscriber = () => {\n//     const latestValue = store.getState()\n//     console.log('latestValue',latestValue)\n// }\n// store.subscribe(countSubscriber)\n// store.dispatch({type:'increment'})\n// store.dispatch({type:'decrement'})\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}