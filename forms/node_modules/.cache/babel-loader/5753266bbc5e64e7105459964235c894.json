{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useBasicInputHook from \"../customHook/useBasicInputHook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const nameFieldIsEmpty = value => {\n    return value.trim() !== '';\n  };\n\n  const {\n    enterValue: enterFirstName,\n    onChangeNameHandler: onChangeFirstNameHandler,\n    NameBlurHandler: FirstNameBlurHandler,\n    reset,\n    hasError: FirstNameInputHasError,\n    valueIsValid: firstNameIsValid\n  } = useBasicInputHook(nameFieldIsEmpty);\n  const {\n    enterValue: enterLastName,\n    onChangeNameHandler: onChangeLastNameHandler,\n    NameBlurHandler: LastNameBlurHandler,\n    hasError: LastNameInputHasError,\n    valueIsValid: lastNameIsValid\n  } = useBasicInputHook(nameFieldIsEmpty);\n  const [enterEmail, setEnterEmailName] = useState('');\n  const [emailNameBlurHandler, setEmailNameBlurHandler] = useState(false);\n  const emailNameIsValid = enterEmail.includes('@');\n  const EmailNameInputHasError = !emailNameIsValid && emailNameBlurHandler;\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailNameIsValid) {\n    formIsValid = true;\n  }\n\n  const onChangeEmailHandler = e => {\n    setEnterEmailName(e.target.value);\n  };\n\n  const EmailNameBlurHandler = () => {\n    setEmailNameBlurHandler(true);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    reset();\n    setEnterEmailName('');\n    setEmailNameBlurHandler(false);\n  };\n\n  const FirstInputValue = FirstNameInputHasError ? 'form-control invalid' : 'form-control';\n  const LastInputValue = LastNameInputHasError ? 'form-control invalid' : 'form-control';\n  const EmailInputValue = EmailNameInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: FirstInputValue,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: onChangeFirstNameHandler,\n          onBlur: FirstNameBlurHandler,\n          value: enterFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), FirstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First name should not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: LastInputValue,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"LastName\",\n          onChange: onChangeLastNameHandler,\n          onBlur: LastNameBlurHandler,\n          value: enterLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), LastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name should not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: EmailInputValue,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: onChangeEmailHandler,\n        onBlur: EmailNameBlurHandler,\n        value: enterEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), EmailNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"wIod7Rv4QBJAairCEGNPwG5enXY=\", false, function () {\n  return [useBasicInputHook, useBasicInputHook];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/forms/src/components/BasicForm.js"],"names":["React","useState","useBasicInputHook","BasicForm","props","nameFieldIsEmpty","value","trim","enterValue","enterFirstName","onChangeNameHandler","onChangeFirstNameHandler","NameBlurHandler","FirstNameBlurHandler","reset","hasError","FirstNameInputHasError","valueIsValid","firstNameIsValid","enterLastName","onChangeLastNameHandler","LastNameBlurHandler","LastNameInputHasError","lastNameIsValid","enterEmail","setEnterEmailName","emailNameBlurHandler","setEmailNameBlurHandler","emailNameIsValid","includes","EmailNameInputHasError","formIsValid","onChangeEmailHandler","e","target","EmailNameBlurHandler","submitHandler","preventDefault","FirstInputValue","LastInputValue","EmailInputValue"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport useBasicInputHook from \"../customHook/useBasicInputHook\";\nconst BasicForm = (props) => {\n\n    const nameFieldIsEmpty = (value) => {\n         return value.trim()!==''\n\n    }\n\n    const {enterValue:enterFirstName,\n        onChangeNameHandler:onChangeFirstNameHandler,\n        NameBlurHandler:FirstNameBlurHandler,reset,hasError:FirstNameInputHasError,\n        valueIsValid:firstNameIsValid\n\n    }=useBasicInputHook(nameFieldIsEmpty)\n\n\n    const {enterValue:enterLastName,\n        onChangeNameHandler:onChangeLastNameHandler,\n        NameBlurHandler:LastNameBlurHandler,hasError:LastNameInputHasError,\n        valueIsValid:lastNameIsValid\n    }=useBasicInputHook(nameFieldIsEmpty)\n\n\n    const [enterEmail,setEnterEmailName] = useState('')\n    const [emailNameBlurHandler,setEmailNameBlurHandler] = useState(false)\n\n\n\n\n    const emailNameIsValid = enterEmail.includes('@')\n\n    const EmailNameInputHasError =   !emailNameIsValid && emailNameBlurHandler\n\n    let formIsValid = false\n    if(firstNameIsValid && lastNameIsValid && emailNameIsValid) {\n        formIsValid=true\n    }\n\n\n\n    const onChangeEmailHandler = (e) => {\n        setEnterEmailName(e.target.value)\n    }\n\n\n\n    const EmailNameBlurHandler = () => {\n        setEmailNameBlurHandler(true)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        reset()\n        setEnterEmailName('')\n\n        setEmailNameBlurHandler(false)\n\n\n    }\n    const FirstInputValue = FirstNameInputHasError ? 'form-control invalid' : 'form-control'\n    const LastInputValue = LastNameInputHasError ? 'form-control invalid' : 'form-control'\n    const EmailInputValue = EmailNameInputHasError ? 'form-control invalid' : 'form-control'\n\n\n    return (\n    <form onSubmit={submitHandler}>\n      <div>\n        <div className={FirstInputValue}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onChange={onChangeFirstNameHandler}\n                 onBlur={FirstNameBlurHandler}\n          value={enterFirstName}\n          />\n            {FirstNameInputHasError  && <p className=\"error-text\">First name should not be empty</p>}\n        </div>\n        <div className={LastInputValue}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='LastName' onChange={onChangeLastNameHandler}\n                 onBlur={LastNameBlurHandler}\n          value={enterLastName}\n          />\n            {LastNameInputHasError  && <p className=\"error-text\">Last name should not be empty</p>}\n\n        </div>\n      </div>\n      <div className={EmailInputValue}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name'  onChange={onChangeEmailHandler}\n               onBlur={EmailNameBlurHandler}\n        value={enterEmail}\n        />\n          {EmailNameInputHasError  && <p className=\"error-text\">Email should not be empty</p>}\n\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}