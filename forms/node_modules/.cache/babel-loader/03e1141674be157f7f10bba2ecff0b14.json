{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(''); // const [nameInputFieldIsValid, setNameInputFieldIsValid] = useState(false)\n\n  const [enterNameTouched, setEnterNameTouched] = useState(false);\n  const inputRef = useRef();\n  const enteredNameIsValid = enteredValue.trim() !== '';\n  const nameInputFieldIsInvalid = !enteredNameIsValid && enterNameTouched;\n  let formDisabled = false;\n\n  if (enteredNameIsValid) {\n    formDisabled = true;\n  }\n\n  const inputChangeHandle = e => {\n    setEnteredValue(e.target.value);\n    setEnterNameTouched(true);\n  };\n\n  const inputBlurHandle = e => {\n    setEnterNameTouched(true);\n  };\n\n  const onSubmitHAndler = e => {\n    e.preventDefault();\n    setEnterNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    setEnteredValue('');\n    setEnterNameTouched(false);\n  };\n\n  const inputValue = nameInputFieldIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHAndler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputValue,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredValue,\n        ref: inputRef,\n        onBlur: inputBlurHandle,\n        onChange: inputChangeHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), nameInputFieldIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"1pvxjy/V91GernaUNTa+qvh/7pQ=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/forms/src/components/SimpleInput.js"],"names":["React","useState","useRef","SimpleInput","props","enteredValue","setEnteredValue","enterNameTouched","setEnterNameTouched","inputRef","enteredNameIsValid","trim","nameInputFieldIsInvalid","formDisabled","inputChangeHandle","e","target","value","inputBlurHandle","onSubmitHAndler","preventDefault","inputValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,MAAvB,QAAoC,OAApC;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCL,QAAQ,CAAC,EAAD,CAA/C,CAD2B,CAE3B;;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMQ,QAAQ,GAAEP,MAAM,EAAtB;AAGJ,QAAMQ,kBAAkB,GAAGL,YAAY,CAACM,IAAb,OAAwB,EAAnD;AACA,QAAMC,uBAAuB,GAAG,CAACF,kBAAD,IAAuBH,gBAAvD;AACI,MAAIM,YAAY,GAAG,KAAnB;;AACA,MAAGH,kBAAH,EAAuB;AACnBG,IAAAA,YAAY,GAAC,IAAb;AACH;;AAED,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BT,IAAAA,eAAe,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACAT,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAHD;;AAKA,QAAMU,eAAe,GAAIH,CAAD,IAAO;AAC3BP,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAFD;;AAIA,QAAMW,eAAe,GAAIJ,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACK,cAAF;AACAZ,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;;AACA,QAAG,CAACE,kBAAJ,EAAwB;AACpB;AACH;;AACDJ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAGH,GAVD;;AAYJ,QAAMa,UAAU,GAAGT,uBAAuB,GAAG,sBAAH,GAA4B,cAAtE;AACE,sBACE;AAAM,IAAA,QAAQ,EAAEO,eAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEE,UAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AACO,QAAA,KAAK,EAAEhB,YADd;AAEO,QAAA,GAAG,EAAEI,QAFZ;AAGO,QAAA,MAAM,EAAES,eAHf;AAIO,QAAA,QAAQ,EAAEJ;AAJjB;AAAA;AAAA;AAAA;AAAA,cAFF,EAOKF,uBAAuB,iBAAK;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApDD;;GAAMT,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React,{useState,useRef} from \"react\";\nconst SimpleInput = (props) => {\n    const [enteredValue,setEnteredValue] = useState('')\n    // const [nameInputFieldIsValid, setNameInputFieldIsValid] = useState(false)\n    const [enterNameTouched, setEnterNameTouched] = useState(false)\n    const inputRef= useRef()\n\n\nconst enteredNameIsValid = enteredValue.trim() !== ''\nconst nameInputFieldIsInvalid = !enteredNameIsValid && enterNameTouched;\n    let formDisabled = false\n    if(enteredNameIsValid) {\n        formDisabled=true\n    }\n\n    const inputChangeHandle = (e) => {\n        setEnteredValue(e.target.value)\n        setEnterNameTouched(true)\n    }\n\n    const inputBlurHandle = (e) => {\n        setEnterNameTouched(true)\n    }\n\n    const onSubmitHAndler = (e) => {\n        e.preventDefault()\n        setEnterNameTouched(true)\n        if(!enteredNameIsValid) {\n            return\n        }\n        setEnteredValue('')\n        setEnterNameTouched(false)\n\n\n    }\n\nconst inputValue = nameInputFieldIsInvalid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={onSubmitHAndler}>\n      <div className={inputValue}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name'\n               value={enteredValue}\n               ref={inputRef}\n               onBlur={inputBlurHandle}\n               onChange={inputChangeHandle}/>\n          {nameInputFieldIsInvalid  && <p className=\"error-text\">Name should not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled >Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}