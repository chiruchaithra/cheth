{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [enterNameTouched, setEnterNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const enteredNameIsValid = enteredValue.trim() !== '';\n  const nameInputFieldIsInvalid = !enteredNameIsValid && enterNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  console.log('enteredEmailIsValid', enteredEmailIsValid);\n  let formDisabled = false;\n\n  if (enteredNameIsValid) {\n    formDisabled = true;\n  }\n\n  const inputChangeHandle = (e, type) => {\n    console.log('check', e.target.value, type);\n\n    if (type === 'name') {\n      setEnteredValue(e.target.value);\n    } else {\n      setEnteredEmail(e.target.value);\n    }\n\n    setEnterNameTouched(true);\n  };\n\n  const inputBlurHandle = e => {\n    setEnterNameTouched(true);\n  };\n\n  const onSubmitHAndler = e => {\n    e.preventDefault();\n    setEnterNameTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    setEnteredValue('');\n    setEnteredEmail('');\n    setEnterNameTouched(false);\n  };\n\n  const inputValue = nameInputFieldIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHAndler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputValue,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredValue,\n        onBlur: inputBlurHandle,\n        onChange: e => {\n          inputChangeHandle(e, 'name');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), nameInputFieldIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputValue,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: e => {\n          inputChangeHandle(e, 'email');\n        },\n        value: enteredEmail // onBlur={inputBlurHandle}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formDisabled,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"+McEW675RFTVYH0BgtWhydGKDnk=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/forms/src/components/SimpleInput.js"],"names":["React","useState","useRef","SimpleInput","props","enteredValue","setEnteredValue","enterNameTouched","setEnterNameTouched","enteredEmail","setEnteredEmail","enteredNameIsValid","trim","nameInputFieldIsInvalid","enteredEmailIsValid","includes","console","log","formDisabled","inputChangeHandle","e","type","target","value","inputBlurHandle","onSubmitHAndler","preventDefault","inputValue"],"mappings":"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","sourcesContent":["import React,{useState,useRef} from \"react\";\nconst SimpleInput = (props) => {\n    const [enteredValue,setEnteredValue] = useState('')\n    const [enterNameTouched, setEnterNameTouched] = useState(false)\n    const [enteredEmail,setEnteredEmail] = useState('')\n\n\nconst enteredNameIsValid = enteredValue.trim() !== ''\nconst nameInputFieldIsInvalid = !enteredNameIsValid && enterNameTouched;\nconst enteredEmailIsValid = enteredEmail.includes('@')\n    console.log('enteredEmailIsValid',enteredEmailIsValid)\n\n\n    let formDisabled = false\n    if(enteredNameIsValid) {\n        formDisabled=true\n    }\n\n    const inputChangeHandle = (e,type) => {\n        console.log('check',e.target.value,type)\n        if(type === 'name')\n        {\n            setEnteredValue(e.target.value)\n        } else {\n            setEnteredEmail(e.target.value)\n        }\n        setEnterNameTouched(true)\n    }\n\n    const inputBlurHandle = (e) => {\n        setEnterNameTouched(true)\n    }\n\n    const onSubmitHAndler = (e) => {\n        e.preventDefault()\n        setEnterNameTouched(true)\n        if(!enteredNameIsValid && !enteredEmailIsValid) {\n            return\n        }\n        setEnteredValue('')\n        setEnteredEmail('')\n        setEnterNameTouched(false)\n\n\n    }\n\nconst inputValue = nameInputFieldIsInvalid ? 'form-control invalid' : 'form-control'\n  return (\n    <form onSubmit={onSubmitHAndler}>\n      <div className={inputValue}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name'\n               value={enteredValue}\n               onBlur={inputBlurHandle}\n               onChange={ (e) => {inputChangeHandle(e,'name')}}/>\n          {nameInputFieldIsInvalid  && <p className=\"error-text\">Name should not be empty</p>}\n      </div>\n\n        <div className={inputValue}>\n            <label htmlFor='name'>Your Email</label>\n            <input type='email'\n                   id='email'\n                   onChange={(e) => {inputChangeHandle(e,'email')}}\n                   value={enteredEmail}\n                   // onBlur={inputBlurHandle}\n            />\n        </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formDisabled} >Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}