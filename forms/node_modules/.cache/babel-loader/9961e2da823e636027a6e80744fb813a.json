{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst useBasicInputHook = validate => {\n  _s();\n\n  const [enterValue, setEnterValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validate(enterValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const onChangeNameHandler = e => {\n    setEnterValue(e.target.value);\n  };\n\n  const NameBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnterValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    enterValue,\n    isTouched,\n    onChangeNameHandler,\n    NameBlurHandler,\n    reset,\n    valueIsValid,\n    hasError\n  };\n};\n\n_s(useBasicInputHook, \"6gBEWTiEYt7sjzbMpxjkRW8biH4=\");\n\nexport default useBasicInputHook;","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/forms/src/customHook/useBasicInputHook.js"],"names":["React","useState","useBasicInputHook","validate","enterValue","setEnterValue","isTouched","setIsTouched","valueIsValid","hasError","onChangeNameHandler","e","target","value","NameBlurHandler","reset"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AACA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AAAA;;AACpC,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BJ,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;AAEA,QAAMO,YAAY,GAAGL,QAAQ,CAACC,UAAD,CAA7B;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,QAAMI,mBAAmB,GAAIC,CAAD,IAAO;AAC/BN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC1BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMQ,KAAK,GAAG,MAAM;AAChBV,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAIJ,SAAO;AACCH,IAAAA,UADD;AACYE,IAAAA,SADZ;AACsBI,IAAAA,mBADtB;AAC0CI,IAAAA,eAD1C;AAC0DC,IAAAA,KAD1D;AACgEP,IAAAA,YADhE;AAC6EC,IAAAA;AAD7E,GAAP;AAGC,CAtBD;;GAAMP,iB;;AAuBN,eAAeA,iBAAf","sourcesContent":["import React,{useState} from \"react\";\nconst useBasicInputHook = (validate) => {\n    const [enterValue,setEnterValue] = useState('')\n    const [isTouched,setIsTouched] = useState(false)\n\n    const valueIsValid = validate(enterValue)\n    const hasError = !valueIsValid && isTouched\n\n    const onChangeNameHandler = (e) => {\n        setEnterValue(e.target.value)\n    }\n\n    const NameBlurHandler = () => {\n        setIsTouched(true)\n    }\n\n    const reset = () => {\n        setEnterValue('')\n        setIsTouched(false)\n    }\nreturn {\n        enterValue,isTouched,onChangeNameHandler,NameBlurHandler,reset,valueIsValid,hasError\n}\n}\nexport default useBasicInputHook"]},"metadata":{},"sourceType":"module"}