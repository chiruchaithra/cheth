{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [enterFirstName, setEnterFirstName] = useState('');\n  const [firstNameBlurHandler, setFirstNameBlurHandler] = useState(false);\n  const [enterLastName, setEnterLastName] = useState('');\n  const [lastNameBlurHandler, setLastNameBlurHandler] = useState(false);\n  const [enterEmail, setEnterEmailName] = useState('');\n  const [emailNameBlurHandler, setEmailNameBlurHandler] = useState(false);\n  const firstNameIsValid = enterFirstName.trim() !== '';\n  const lastNameIsValid = enterLastName.trim() !== '';\n  const emailNameIsValid = enterEmail.includes('@');\n  const FirstNameInputHasError = !firstNameIsValid && firstNameBlurHandler;\n  const LastNameInputHasError = !lastNameIsValid && lastNameBlurHandler;\n  const EmailNameInputHasError = !emailNameBlurHandler && emailNameIsValid;\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && !emailNameIsValid) {\n    formIsValid = true;\n  }\n\n  console.log('formIsValid', formIsValid);\n\n  const onChangeFirstNameHandler = e => {\n    setEnterFirstName(e.target.value);\n  };\n\n  const onChangeLastNameHandler = e => {\n    setEnterLastName(e.target.value);\n  };\n\n  const onChangeEmailHandler = e => {\n    setEnterEmailName(e.target.value);\n  };\n\n  const FirstNameBlurHandler = () => {\n    setFirstNameBlurHandler(true);\n  };\n\n  const LastNameBlurHandler = () => {\n    setLastNameBlurHandler(true);\n  };\n\n  const EmailNameBlurHandler = () => {\n    setEmailNameBlurHandler(true);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setEnterEmailName('');\n    setEnterFirstName('');\n    setEnterLastName('');\n  };\n\n  const FirstInputValue = FirstNameInputHasError ? 'form-control invalid' : 'form-control';\n  const LastInputValue = LastNameInputHasError ? 'form-control invalid' : 'form-control';\n  const EmailInputValue = EmailNameInputHasError ? 'form-control invalid' : 'form-control';\n  console.log('FirstInputValue', FirstInputValue);\n  console.log('LastInputValue', LastInputValue);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: FirstInputValue,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: onChangeFirstNameHandler,\n          onBlur: FirstNameBlurHandler,\n          value: enterFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), FirstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First name should not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: LastInputValue,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"LastName\",\n          onChange: onChangeLastNameHandler,\n          onBlur: LastNameBlurHandler,\n          value: enterLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), LastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name should not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: EmailInputValue,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: onChangeEmailHandler,\n        onBlur: EmailNameBlurHandler,\n        value: enterEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), EmailNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email should not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"pfB/dCOLB34W0u+2iExnZg7LQ3I=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/forms/src/components/BasicForm.js"],"names":["React","useState","BasicForm","props","enterFirstName","setEnterFirstName","firstNameBlurHandler","setFirstNameBlurHandler","enterLastName","setEnterLastName","lastNameBlurHandler","setLastNameBlurHandler","enterEmail","setEnterEmailName","emailNameBlurHandler","setEmailNameBlurHandler","firstNameIsValid","trim","lastNameIsValid","emailNameIsValid","includes","FirstNameInputHasError","LastNameInputHasError","EmailNameInputHasError","formIsValid","console","log","onChangeFirstNameHandler","e","target","value","onChangeLastNameHandler","onChangeEmailHandler","FirstNameBlurHandler","LastNameBlurHandler","EmailNameBlurHandler","submitHandler","preventDefault","FirstInputValue","LastInputValue","EmailInputValue"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nconst BasicForm = (props) => {\n    const [enterFirstName,setEnterFirstName] = useState('')\n    const [firstNameBlurHandler,setFirstNameBlurHandler] = useState(false)\n\n    const [enterLastName,setEnterLastName] = useState('')\n    const [lastNameBlurHandler,setLastNameBlurHandler] = useState(false)\n\n\n    const [enterEmail,setEnterEmailName] = useState('')\n    const [emailNameBlurHandler,setEmailNameBlurHandler] = useState(false)\n\n\n\n\n    const firstNameIsValid = enterFirstName.trim()!==''\n    const lastNameIsValid = enterLastName.trim()!==''\n    const emailNameIsValid = enterEmail.includes('@')\n\n    const FirstNameInputHasError = !firstNameIsValid && firstNameBlurHandler\n    const LastNameInputHasError = !lastNameIsValid && lastNameBlurHandler\n    const EmailNameInputHasError = !emailNameBlurHandler && emailNameIsValid\n\n    let formIsValid = false\n    if(firstNameIsValid && lastNameIsValid && !emailNameIsValid) {\n        formIsValid=true\n    }\n    console.log('formIsValid',formIsValid)\n\n    const onChangeFirstNameHandler = (e) => {\n        setEnterFirstName(e.target.value)\n    }\n    const onChangeLastNameHandler = (e) => {\n        setEnterLastName(e.target.value)\n    }\n    const onChangeEmailHandler = (e) => {\n        setEnterEmailName(e.target.value)\n    }\n\n    const FirstNameBlurHandler = () => {\n        setFirstNameBlurHandler(true)\n    }\n    const LastNameBlurHandler = () => {\n        setLastNameBlurHandler(true)\n    }\n    const EmailNameBlurHandler = () => {\n        setEmailNameBlurHandler(true)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        setEnterEmailName('')\n        setEnterFirstName('')\n        setEnterLastName('')\n\n\n    }\n    const FirstInputValue = FirstNameInputHasError ? 'form-control invalid' : 'form-control'\n    const LastInputValue = LastNameInputHasError ? 'form-control invalid' : 'form-control'\n    const EmailInputValue = EmailNameInputHasError ? 'form-control invalid' : 'form-control'\n\n    console.log('FirstInputValue',FirstInputValue)\n    console.log('LastInputValue',LastInputValue)\n\n    return (\n    <form onSubmit={submitHandler}>\n      <div>\n        <div className={FirstInputValue}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onChange={onChangeFirstNameHandler}\n                 onBlur={FirstNameBlurHandler}\n          value={enterFirstName}\n          />\n            {FirstNameInputHasError  && <p className=\"error-text\">First name should not be empty</p>}\n        </div>\n        <div className={LastInputValue}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='LastName' onChange={onChangeLastNameHandler}\n                 onBlur={LastNameBlurHandler}\n          value={enterLastName}\n          />\n            {LastNameInputHasError  && <p className=\"error-text\">Last name should not be empty</p>}\n\n        </div>\n      </div>\n      <div className={EmailInputValue}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name'  onChange={onChangeEmailHandler}\n               onBlur={EmailNameBlurHandler}\n        value={enterEmail}\n        />\n          {EmailNameInputHasError  && <p className=\"error-text\">Email should not be empty</p>}\n\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}