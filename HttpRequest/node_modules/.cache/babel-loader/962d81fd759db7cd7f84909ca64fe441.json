{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Downloads/HttpRequest/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]); // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  const fetchMovies = async () => {\n    // This is by using asynchrouous call of then\n    // fetch('https://swapi.dev/api/films').then((response) => {\n    //     return response.json()}).then((data) => {\n    //        const transformedMovies = data.results.map(movie => {\n    //            return {\n    //                id:movie.episode_id,\n    //                title:movie.title,\n    //                releaseDate:movie.release_date,\n    //                openingText: movie.opening_crawl\n    //            }\n    //        })\n    //     setMovies(transformedMovies)\n    //\n    // })\n    // This simplifies asynchrous call by async and await\n    const response = await fetch('https://swapi.dev/api/films');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movie => {\n      return {\n        id: movie.episode_id,\n        title: movie.title,\n        releaseDate: movie.release_date,\n        openingText: movie.opening_crawl\n      };\n    });\n    setMovies(transformedMovies);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chaithrams/Downloads/HttpRequest/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","fetchMovies","response","fetch","data","json","transformedMovies","results","map","movie","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC,CADW,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAOK,WAAW,GAAG,YAAY;AAC3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACO,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AAChD,aAAO;AACHC,QAAAA,EAAE,EAACD,KAAK,CAACE,UADN;AAEHC,QAAAA,KAAK,EAACH,KAAK,CAACG,KAFT;AAGHC,QAAAA,WAAW,EAACJ,KAAK,CAACK,YAHf;AAIHC,QAAAA,WAAW,EAAEN,KAAK,CAACO;AAJhB,OAAP;AAMH,KAPyB,CAA1B;AAQHhB,IAAAA,SAAS,CAACM,iBAAD,CAAT;AACP,GA7BD;;AA+BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD;;AAED,eAAeD,GAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n    const [movies, setMovies] = useState([])\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  const  fetchMovies = async () => {\n        // This is by using asynchrouous call of then\n      // fetch('https://swapi.dev/api/films').then((response) => {\n      //     return response.json()}).then((data) => {\n      //        const transformedMovies = data.results.map(movie => {\n      //            return {\n      //                id:movie.episode_id,\n      //                title:movie.title,\n      //                releaseDate:movie.release_date,\n      //                openingText: movie.opening_crawl\n      //            }\n      //        })\n      //     setMovies(transformedMovies)\n      //\n      // })\n\n\n      // This simplifies asynchrous call by async and await\n      const response = await fetch('https://swapi.dev/api/films')\n      const data = await response.json()\n             const transformedMovies = data.results.map(movie => {\n                 return {\n                     id:movie.episode_id,\n                     title:movie.title,\n                     releaseDate:movie.release_date,\n                     openingText: movie.opening_crawl\n                 }\n             })\n          setMovies(transformedMovies)\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}