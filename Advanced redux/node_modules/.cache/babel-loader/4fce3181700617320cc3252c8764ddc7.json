{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartReducer = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemToCard: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.item.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1, existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCard: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity = existingItem.quantity - 1, existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartSliceActions = cartReducer.actions;\nexport default cartReducer.reducer;","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Advanced redux/src/store/cartReducer.js"],"names":["createSlice","initialState","items","totalQuantity","cartReducer","name","reducers","addItemToCard","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","removeItemFromCard","filter","cartSliceActions","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,aAAa,EAAC;AAFG,CAArB;AAIA,MAAMC,WAAW,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAC,MADuB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,aAAa,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACN,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;;AACA,UAAG,CAACH,YAAJ,EAAkB;AACdJ,QAAAA,KAAK,CAACM,IAAN,CAAWE,IAAX,CAAgB;AACZD,UAAAA,EAAE,EAACL,OAAO,CAACK,EADC;AAEZE,UAAAA,KAAK,EAACP,OAAO,CAACO,KAFF;AAGZC,UAAAA,QAAQ,EAAC,CAHG;AAIZC,UAAAA,UAAU,EAACT,OAAO,CAACO,KAJP;AAKZZ,UAAAA,IAAI,EAACK,OAAO,CAACL;AALD,SAAhB;AAOH,OARD,MAQO;AACHO,QAAAA,YAAY,CAACM,QAAb,GAAwBN,YAAY,CAACM,QAAb,GAAuB,CAA/C,EACIN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KADhE;AAEH;AACA,KAhBA;AAkBLG,IAAAA,kBAAkB,EAAG,CAACZ,KAAD,EAAOC,MAAP,KAAkB;AACnC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACN,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;;AACA,UAAGH,YAAY,CAACM,QAAb,KAA0B,CAA7B,EAAgC;AAC5BV,QAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYmB,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AAEH,OAHD,MAGO;AACHH,QAAAA,YAAY,CAACM,QAAb,GAAwBN,YAAY,CAACM,QAAb,GAAuB,CAA/C,EACIN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KADrE;AAEH;AACJ;AA5BI;AAHmB,CAAD,CAA/B;AAqCA,OAAO,MAAOK,gBAAgB,GAAGlB,WAAW,CAACmB,OAAtC;AACP,eAAenB,WAAW,CAACoB,OAA3B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {\n    items:[],\n    totalQuantity:0\n}\nconst cartReducer = createSlice({\n    name:'cart',\n    initialState,\n    reducers:{\n        addItemToCard:(state,action)=> {\n            const newItem = action.payload\n            const existingItem = state.items.find(item => item.id === newItem.id)\n            if(!existingItem) {\n                state.item.push({\n                    id:newItem.id,\n                    price:newItem.price,\n                    quantity:1,\n                    totalPrice:newItem.price,\n                    name:newItem.name\n                })\n            } else {\n                existingItem.quantity = existingItem.quantity +1,\n                    existingItem.totalPrice = existingItem.totalPrice + newItem.price\n            }\n            },\n\n        removeItemFromCard : (state,action) => {\n            const id = action.payload\n            const existingItem = state.items.find(item => item.id === id)\n            if(existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.id !== id)\n\n            } else {\n                existingItem.quantity = existingItem.quantity -1,\n                    existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n            }\n        }\n    }\n})\n\n\n\nexport const  cartSliceActions = cartReducer.actions\nexport default cartReducer.reducer;\n"]},"metadata":{},"sourceType":"module"}