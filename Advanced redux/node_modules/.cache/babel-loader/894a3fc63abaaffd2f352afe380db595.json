{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrams/Documents/cheth/Advanced redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport globalSelector from \"./Selector/globalSelector\";\nimport { connect } from \"react-redux\";\nimport { useEffect, Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from './store/UiReducer';\nimport { cartSliceActions } from './store/cartReducer';\nimport Notification from \"./components/UI/Notification/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet IsInitial = true;\n\nfunction App(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    cartItems,\n    notification\n  } = props;\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('https://advance-react-424ec-default-rtdb.firebaseio.com/cart.json');\n      const resp = await response.json();\n\n      if (resp) {\n        dispatch(cartSliceActions.setBackEndCarts({\n          beItems: resp\n        }));\n      }\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        message: 'Sending cart data..',\n        status: 'pending',\n        title: 'Pending'\n      }));\n      const response = await fetch('https://advance-react-424ec-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cartItems)\n      });\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      dispatch(uiActions.showNotification({\n        message: 'Sent cart data successfully',\n        status: 'success',\n        title: 'Success'\n      }));\n    };\n\n    if (IsInitial) {\n      IsInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        message: error.message,\n        status: 'error',\n        title: 'Error'\n      }));\n    });\n  }, [cartItems]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      title: notification.title,\n      message: notification.message,\n      status: notification.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [props.shoppingCartVisible ? /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 44\n      }, this) : '', /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"AgIJcfH1H12KzRN1QiO1ExB/+eo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default connect(globalSelector)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chaithrams/Documents/cheth/Advanced redux/src/App.js"],"names":["Cart","Layout","Products","globalSelector","connect","useEffect","Fragment","useDispatch","uiActions","cartSliceActions","Notification","IsInitial","App","props","dispatch","cartItems","notification","fetchData","response","fetch","resp","json","setBackEndCarts","beItems","sendCartData","showNotification","message","status","title","method","body","JSON","stringify","ok","Error","catch","error","shoppingCartVisible"],"mappings":"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","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport globalSelector from \"./Selector/globalSelector\";\nimport {connect} from \"react-redux\";\nimport {useEffect,Fragment} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {uiActions} from './store/UiReducer'\nimport {cartSliceActions} from './store/cartReducer'\nimport Notification from \"./components/UI/Notification/Notification\";\n\nlet IsInitial = true\nfunction App(props) {\n    const dispatch = useDispatch()\n    const {cartItems,notification} = props\n\n    useEffect( () => {\n        const fetchData = async () => {\n            const response = await fetch('https://advance-react-424ec-default-rtdb.firebaseio.com/cart.json')\n            const resp =  await response.json()\n            if(resp) {\n                dispatch(cartSliceActions.setBackEndCarts({beItems:resp}))\n            }\n        }\n        fetchData()\n    },[])\n\n    useEffect(() => {\n        const sendCartData = async () => {\n            dispatch(uiActions.showNotification({\n                message: 'Sending cart data..',\n                status: 'pending',\n                title: 'Pending'\n            }))\n                const response = await fetch('https://advance-react-424ec-default-rtdb.firebaseio.com/cart.json', {\n                    method: 'PUT',\n                    body: JSON.stringify(cartItems)\n                })\n                if (!response.ok) {\n                    throw new Error('Something went wrong')\n                }\n\n\n                dispatch(uiActions.showNotification({\n                    message: 'Sent cart data successfully',\n                    status: 'success',\n                    title: 'Success'\n                }))\n\n        }\n            if(IsInitial) {\n                IsInitial=false\n                return\n            }\n\n        sendCartData().catch((error => {\n            dispatch(uiActions.showNotification({\n                message:error.message,\n                status:'error',\n                title:'Error'\n            }))\n        }))\n\n    },[cartItems])\n  return (\n      <Fragment>\n          {notification && <Notification\n          title={notification.title}\n          message={notification.message}\n          status={notification.status}\n          /> }\n          <Layout>\n              {props.shoppingCartVisible ? <Cart/> : ''}\n              <Products />\n          </Layout>\n      </Fragment>\n\n  );\n}\n\nexport default connect(globalSelector)(App);\n"]},"metadata":{},"sourceType":"module"}